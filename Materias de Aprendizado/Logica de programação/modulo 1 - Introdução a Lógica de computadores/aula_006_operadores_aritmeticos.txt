---------------------------------
FONTES
---------------------------------
        
        ----- livro 1 de referencia -----

AUTOR: Marco, marcelo, marcio, ricardo
LIVRO: Algoritmos e L√≥gica de programa√ß√£o: um texto introdutorio para 
a engenharia
"Editora": CENGAGE

        ----- livro 2 de referencia -----

AUTOR: Andr√© Luiz Villar Forbellone
LIVRO: L√≥gica de programa√ß√£o: : a constru√ß√£o de algoritmos e 
estruturas de dados
"Editora": Pearson Education

        ----- livro 3 de referencia -----
        
AUTOR: Marcos Castilho, Fabiano Silva, Daniel Weingaertner 
LIVRO: Algoritmos e Estruturas de Dados 1
Universidade Federal do Paran√°
------------------------------------------------

-----   ---  -- - Atribui√ß√µes

Atribui√ß√£o √© a opera√ß√£o que permite armazenar um valor em uma 
vari√°vell, isto √©, em um endere√ßo de mem√≥ria Para essa opera√ß√£o, ser√° 
utilizado o s√≠mbolo <- (seta para a esquerda).

O comando de atribui√ß√£o tem na verdade tr√™s componentes: o pr√≥prio 
s√≠mbolo de atribui√ß√£o definido pela linguagem, o lado esquerdo e o 
lado direito.

O lado esquerdo √© obrigatoriamente o nome de uma √∫nica vari√°vel. O 
lado direito √© uma express√£o (uma sequ√™ncia de opera√ß√µes) que deve 
resultar em um valor do mesmo tipo da vari√°vel que est√° do lado 
esquerdo. Esta express√£o pode ser de dois tipos: ou √© uma express√£o 
aritm√©tica ou √© uma express√£o booleana.

o computador deve realizar o c√°lculo da express√£o aritm√©tica do lado
direito do s√≠mbolo de atribui√ß√£o e somente depois armazenar o valor 
resultante na vari√°vel que aparece do lado esquerdo.

-----   ---  -- - Operadores aritm√©ticos

Chamamos de operadores aritm√©ticos o conjunto de s√≠mbolos que 
representa as opera√ß√µes b√°sicas da matem√°tica

------------------------------------
        ----- Operadores -----
------------------------------------
operador | Fun√ß√£o        | exemplo
------------------------------------
+        | Adi√ß√£o        | 1 + 1
-        | subtra√ß√£o     | 2 - 1
*        | multiplica√ß√£o | 5 * 5
/        | divis√£o       | 4 / 2
-------------------------------------

Existem tamb√©m opera√ß√µes matem√°ticas n√£o-convencionais, por√©m √∫teis
na constru√ß√£o de algoritmos.

Divis√£o inteira (//)

Retorna a parte inteira do resultado de uma divis√£o simples. Pode ser 
entendida, tamb√©m, como um arredondamento para baixo.

EXEMPLOS;
10 // 2 = 5 (resultado exato)
7  // 3 = 2 (resultado truncado o valor da divis√£o seria 2.333)


M√≥dulo (%)

Retorna o resto de uma divis√£o inteira. Pode ser entendido, tamb√©m, 
como o que sobra depois de realizar uma divis√£o inteira.

Dado dois n√∫meros 'a' (dividendo) e 'b' (divisor), o m√≥dulo (ùëé % ùëè)
retorna o valor 'r', que √© o resto da divis√£o inteira.

F√≥rmula do m√≥dulo:

ùëé = ùëè ‚ãÖ ùëû + ùëü
Onde:

ùëû √© o quociente inteiro (ùëé√∑ùëè, arredondado para baixo), r √© o resto (
0 ‚â§ ùëü < ‚à£ùëè‚à£)

Regras importantes:
O sinal do resto segue o sinal do divisor (b).
O valor absoluto do resto √© sempre menor que o valor absoluto do 
divisor (‚à£ùëü‚à£ < ‚à£ùëè‚à£.)

Operadores Relacionais

O que s√£o? 

- S√£o usados para comparar dois valores do mesmo tipo, como n√∫meros ou 
letras.

Valores poss√≠veis: Podem comparar constantes, vari√°veis ou resultados 
de contas (express√µes aritm√©ticas).

Resultado: Sempre d√£o um valor l√≥gico, ou seja, verdadeiro ou falso.

Principais s√≠mbolos:
=: Igual a.
>: Maior que.
<: Menor que.

Outros exemplos: 
maior ou igual (>=), 
menor ou igual (<=), 
diferente (<> ou !=).

Exemplos pr√°ticos:
3 = 3 ‚Üí verdadeiro.
5 > 4 ‚Üí verdadeiro.
X < Y ‚Üí depende dos valores de X e Y.

Hierarquia: Eles t√™m prioridade maior que operadores l√≥gicos, mas 
menor que operadores matem√°ticos.

Operadores L√≥gicos

O que s√£o? Usados para combinar mais de uma condi√ß√£o l√≥gica 
(verdadeira ou falsa) em uma √∫nica compara√ß√£o.

Operadores b√°sicos:

n√£o (nega√ß√£o): Inverte o valor l√≥gico (verdadeiro vira falso, e 
vice-versa).

e (conjun√ß√£o): S√≥ d√° verdadeiro se todas as condi√ß√µes forem 
verdadeiras.

ou (disjun√ß√£o): D√° verdadeiro se pelo menos uma condi√ß√£o for 
verdadeira.

Exemplos pr√°ticos:

(nota >= 7) e (frequencia >= 75) ‚Üí Aprovado se nota e frequ√™ncia forem 
suficientes.

(cor = "azul") ou (cor = "cinza") ‚Üí Verdadeiro se a cor for azul ou 
cinza.

Preced√™ncia:

Primeiro, resolve n√£o.
Depois, resolve e.
Por √∫ltimo, resolve ou.

Combina√ß√£o com relacionais: √â poss√≠vel combinar operadores l√≥gicos e 
relacionais para criar condi√ß√µes mais complexas.

Flexibilidade: Usados para criar regras e condi√ß√µes detalhadas em 
programas de forma eficiente.

